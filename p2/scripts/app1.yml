---

apiVersion: v1
kind: Service
metadata:
  name: app-1
  labels:
    app: app-1
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    app: app-1

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-1
  labels:
    app: app-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-1
  template:
    metadata:
      labels:
        app: app-1
    spec:
      containers:
      - name: app-1
        image: paulbouwer/hello-kubernetes:1.10
        imagePullPolicy: IfNotPresent
        env: 
        - name: MESSAGE
          value: "Hello from app-one."

---


# Service

# Это конфигурация службы Kubernetes. Вот разбивка того, что он делает:

# apiVersion: v1: указывает версию API Kubernetes, которую вы используете для создания этого объекта.

# kind: Service: это означает, что вы создаете Службу, которая представляет собой объект Kubernetes, который абстрагирует детали внутренних модулей и предоставляет стабильную конечную точку сети, через которую к ним можно получить доступ.

# metadata: этот раздел содержит данные, которые помогают однозначно идентифицировать объект, включая name(название Сервиса) и labels(пары ключ-значение, которые можно использовать для организации и выбора подмножеств объектов).

# spec: Этот раздел определяет желаемое состояние объекта.

# ports: это список портов, которые Служба будет прослушивать, и соответствующих портов на внутренних модулях, на которые будет перенаправляться трафик. В этом случае Служба будет прослушивать порт 80 и перенаправлять трафик на порт 8080 на внутренних модулях.

# selector: так Служба определяет, к каким модулям следует направлять трафик. В данном случае выбираются модули с меткой app: app-1.

# type: NodePort: это означает, что Служба будет доступна через статический порт на каждом узле кластера Kubernetes. Kubernetes автоматически выделит порт из диапазона по умолчанию, и любой трафик, поступающий на этот порт на любом узле, будет перенаправлен в Службу.

# Итак, вкратце, эта служба будет прослушивать статический порт на каждом узле (автоматически выделяемый Kubernetes) и перенаправлять любой трафик, поступающий на этот порт, на порт 8080 на любых подах с меткой app: app-1.



# Deployment

# Это конфигурация развертывания Kubernetes. Вот разбивка того, что он делает:

# apiVersion: apps/v1: указывает версию API Kubernetes, которую вы используете для создания этого объекта.

# kind: Deployment: это означает, что вы создаете развертывание, которое представляет собой объект Kubernetes, представляющий набор идентичных модулей.

# metadata: этот раздел содержит данные, которые помогают однозначно идентифицировать объект, включая name(имя развертывания) и labels(пары «ключ-значение», которые можно использовать для организации и выбора подмножеств объектов).

# spec: Этот раздел определяет желаемое состояние объекта.

# replicas: 1: указывает, что вы хотите, чтобы работала одна копия вашего модуля. Если модуль по какой-либо причине выйдет из строя, развертывание обеспечит его замену новым.

# selector: так развертывание определяет, какими модулями нужно управлять. В данном случае выбираются модули с меткой app: app-1.

# template: это шаблон, который будет использоваться для создания модулей, которыми управляет это развертывание.

# Итак, вкратце, это развертывание создаст один модуль, на котором будет работать paulbouwer/hello-kubernetes:1.10образ Docker, с переменной среды, MESSAGEустановленной на «Hello from app-one». Если модуль выйдет из строя по какой-либо причине, развертывание обеспечит его замену новым.

